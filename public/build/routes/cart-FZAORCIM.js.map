{
  "version": 3,
  "sources": ["../../../app/routes/cart.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\cart.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\cart.jsx\");\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { useLoaderData, Form } from \"@remix-run/react\";\nimport styles from './Styles/global.css';\nexport let loader = () => {\n  let cart = [{\n    id: 1,\n    name: \"Bohemian Platform Bed\",\n    price: 599.00,\n    quantity: 1\n  }, {\n    id: 2,\n    name: \"Yoji Chair\",\n    price: 499.00,\n    quantity: 1\n  }];\n  return cart;\n};\nexport default function Cart() {\n  _s();\n  let cart = useLoaderData();\n  const [customerDetails, setCustomerDetails] = useState({\n    name: \"\",\n    email: \"\",\n    address: \"\"\n  });\n  const handleChange = e => {\n    setCustomerDetails({\n      ...customerDetails,\n      [e.target.name]: e.target.value\n    });\n  };\n  const subtotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const gst = subtotal * 0.18;\n  const grandTotal = subtotal + gst;\n  return <div>\n      <h1>Cart</h1>\n\n      <h2>Customer Details</h2>\n      <Form method=\"post\" action=\"/checkout\">\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" value={customerDetails.name} onChange={handleChange} required />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={customerDetails.email} onChange={handleChange} required />\n        </div>\n        <div>\n          <label>Address:</label>\n          <input type=\"text\" name=\"address\" value={customerDetails.address} onChange={handleChange} required />\n        </div>\n\n        <h2>Products Invoice</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart.map(item => <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>${item.price}</td>\n                <td>{item.quantity}</td>\n                <td>${item.price * item.quantity}</td>\n              </tr>)}\n          </tbody>\n        </table>\n\n        <div className=\"summary\">\n          <p>Subtotal: ${subtotal.toFixed(2)}</p>\n          <p>GST (18%): ${gst.toFixed(2)}</p>\n          <p>Grand Total: ${grandTotal.toFixed(2)}</p>\n        </div>\n\n        <button class=\"button\" type=\"submit\">Checkout</button>\n      </Form>\n    </div>;\n}\n_s(Cart, \"R17Rg+Qomwt0JO8AqJUUaX26vZs=\", false, function () {\n  return [useLoaderData];\n});\n_c = Cart;\nexport function links() {\n  return [{\n    rel: 'stylesheet',\n    href: styles\n  }];\n}\nvar _c;\n$RefreshReg$(_c, \"Cart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
